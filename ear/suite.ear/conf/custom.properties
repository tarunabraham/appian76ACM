####################### custom.properties example file ########################
##                                                                           ##
## NOTE: DO NOT simply rename this file custom.properties.                   ##
##                                                                           ##
## This file contains examples of entries for the custom.properties override ##
## file.  The custom.properties file is not installed by default and must be ##
## created in order to override the default value of a property.  Once       ##
## present, the custom.properties file will not be overwritten by subsequent ##
## upgrade installations.                                                    ##
## The values given in this file are the default values of the configuration ##
## properties. Override a property's default value by copying the relevant   ##
## entry from this file and placing it in conf/custom.properties with a new  ##
## value.  Properties that have no default have <PROVIDE A VALUE> listed as  ##
## the value and must be given a value specific to your environment in order ##
## to be used. All of the properties are commented with a single #.  You     ##
## will have to uncomment the property and give it a value when you copy to  ##
## custom.properties.                                                        ##
## The values will be given by the corresponding filter token value when     ##
## running the build. The filter token values are configured on a per        ##
## environment basis in the properties files local|staging|prod.properties   ##
##                                                                           ##
## The most commonly configured properties are listed here.                  ##
###############################################################################

#################
#### General ####
#################

## Specifying the scheme. Necessary when SSL is not performed at the app server 
## level but enabled at different layer. 
conf.suite.SCHEME=@conf.suite.SCHEME@
#conf.suite.PRIVATE_SCHEME=@conf.suite.PRIVATE_SCHEME@
## If the PRIVATE_SCHEME is set to https (a rare configuration), the following 
## 3 properties must be set to the values appropriate to the ssl protocol and 
## keystore information.  sslProtocol should be one of the value listed in 
## http://java.sun.com/javase/6/docs/technotes/guides/security/StandardNames.html#SSLContext
#conf.suite.sslProtocol=@conf.suite.sslProtocol@
#conf.suite.keystoreFile=@conf.suite.keystoreFile@
#conf.suite.keystorePass=@conf.suite.keystorePass@
## Used by both App Server and Engines to build up base URLs for links
#conf.suite.APPLICATION_CONTEXT=@conf.suite.APPLICATION_CONTEXT@
## The SERVER_AND_PORT property should be in the format server:port.  
## The :port is unnecessary if the port is 80 and the SCHEME is http, or the 
## port is 443 and SCHEME is https.  This is the hostname and port portion of 
## the URL viewed by end users in links (e.g., links in emails)
conf.suite.SERVER_AND_PORT=@conf.suite.SERVER_AND_PORT@

## The minutes of inactivity before the session timeout warning dialog appears
resources.appian.ap.application.appian.ap.session.timeoutwarn=@resources.appian.ap.application.appian.ap.session.timeoutwarn@

## The BASE_PATH is the path to the directory that contains the accdocs*
## directories referenced in server/_conf/partition.xml. Set this prior to 
## migration if upgrading from a previous version and the new installation is
## in a different location on the file system from the previous installation.
## NOTE: The path separator must be a forward slash ("/"), even if using 
## Windows.
#conf.suite.BASE_PATH=@conf.suite.BASE_PATH@

## The location of the log files.
#conf.suite.AE_LOGS=<install_dir>/logs

## The DEFAULT_ENVIRONMENT is the user environment to which the user will be 
## redirected when the environment is not specified in the URL.  By default,
## or if the value is blank, the user will be taken to tempo.  Valid alternate
## options are 'designer' or 'apps' (without quotes).
#conf.suite.DEFAULT_ENVIRONMENT=@conf.suite.DEFAULT_ENVIRONMENT@

conf.navigation.SHOW_APPLICATIONS_MENU=@conf.navigation.SHOW_APPLICATIONS_MENU@

## ID of the default home page that users see in the designer environment if 
## they do not have a custom home page
#conf.suite.DEFAULT_HOME_PAGE_ID=@conf.suite.DEFAULT_HOME_PAGE_ID@

## Copyright statements can be overridden using the following properties.  The
## copyright property allows overriding the entire statement or supports string
## formatting using a param substitution syntax: %1$s, %2$s, %3$s, %4$s
## Note that \u00A9 is the copyright symbol.
#resources.appian.ap.application.appian.ap.copyright=%1$s (v%2$s) \u00A9%3$s %4$s
## The 4 substitution parameters can be individually overriden with the 
## the properties as follows:
## %1$s - the Application name
resources.appian.ap.application.appian.ap.appname=@resources.appian.ap.application.appian.ap.appname@
## %2$s - the version number
#resources.appian.ap.application.appian.ap.version=@resources.appian.ap.application.appian.ap.version@
## %3$s - the copyright year
#resources.appian.ap.application.appian.ap.copyrightYear=@resources.appian.ap.application.appian.ap.copyrightYear@
## %4$s - the company name
#resources.appian.ap.application.appian.ap.appianName=@resources.appian.ap.application.appian.ap.appianName@

## Autocomplete
#conf.suite.AUTOCOMPLETE_ENABLED=@conf.suite.AUTOCOMPLETE_ENABLED@
## Maximum number of suggestions to return with an autocomplete query
#conf.suite.MAX_AUTOCOMPLETE_SUGGESTIONS=@conf.suite.MAX_AUTOCOMPLETE_SUGGESTIONS@
## Maximum number of items to cache for autocomplete
#conf.suite.CACHE_MAX_SIZE=@conf.suite.CACHE_MAX_SIZE@

## Performance Monitoring
## The comma-delimited list of metrics to output in the performance monitoring 
## logs. Set this to blank to enable all performance monitoring metrics in
## the perf_monitor_logs.
# server.conf.a.PERF_MONITOR_HEADER=idle,fg,bg,workq_finished,availableWorkQueue,events_received,consumers_received,ProcessMessageConsumers

## The namespace for custom data types created using the data type designer.
## The value must be a URI. When the value of this property is changed, only
## new data types created in the data type designer get the new namespace value.
## The default value for this property is determined by the SERVER_AND_PORT and
## related properties.
#conf.data.type.designer.namespace=SCHEME://SERVER_AND_PORT/APPLICATION_CONTEXT/types/

###############
#### Email ####
###############

## Sending Email
## The address that will appear as the sender (the "From" address) of 
## notification and password reset emails from the system. 
## Defaults to appian-alerts@<serverdomain>
conf.mailhandler.ntf_sndr_addr=@conf.mailhandler.ntf_sndr_addr@
## The domain (portion after the "@") for the "from" email address for
## addresses created via expressions functions; also applies to the domain
## for alert emails when conf.mailhandler.ntf_sndr_addr is not set. Defaults to
## the domain of the server.
conf.mailhandler.email.domain=@conf.mailhandler.email.domain@
## The host is the FQDN, hostname, or IP address of the SMTP server for sending
## email from the system. Muliple SMTP servers can be specified using a comma-
## separated list.  They will be tried in the order specified.  If a port
## other than 25 is required, append it to the hostname (e.g., mailhost3:9025)
## IMPORTANT: If this is not set, no email will be sent from the system.
conf.mailhandler.mail.smtp.host=@conf.mailhandler.mail.smtp.host@
## The username and password used to connect to the SMTP server above.  Set
## conf.mailhandler.mail.smtp.auth=true if user/password are used.  Leave the
## default (false) to indicate that the SMTP server does not require 
## authentication. If multiple SMTP servers are defined above, the same auth
## settings will apply to all servers. Define the username here and the 
## password in passwords.properties.
#conf.mailhandler.mail.smtp.auth=@conf.mailhandler.mail.smtp.auth@
#conf.mailhandler.mail.user=@conf.mailhandler.mail.user@
## The protocol should be set to either smtp or smtps. The default value is smtp.
#conf.mailhandler.mail.transport.protocol=smtp
## You can enable or require starttls with the "smtp" protocol.  Setting
## starttls.enable=true will cause outgoing mail to use STARTTLS if supported by
## the remote server but will fall back to plain smtp otherwise.  Also setting
## starttls.required=true will cause mail to fail if the remote server does not
## support STARTTLS.
#conf.mailhandler.mail.smtp.starttls.enable=@conf.mailhandler.mail.smtp.starttls.enable@
#conf.mailhandler.mail.smtp.starttls.required=@conf.mailhandler.mail.smtp.starttls.required@

## Rendering Email Body
## The following properties tell the application server where to call in order
## to render the email body before sending.  Define these if the application 
## server cannot connect to the URL defined by 
## conf.suite.SCHEME://conf.suite.SERVER_AND_PORT/conf.suite.APPLICATION_CONTEXT
conf.suite.MAIL_SCHEME=@conf.suite.MAIL_SCHEME@
#conf.suite.MAIL_APPLICATION_CONTEXT=<defaults to conf.suite.APPLICATION_CONTEXT>
conf.suite.MAIL_SERVER_AND_PORT=@conf.suite.MAIL_SERVER_AND_PORT@

## Receiving Email - see documentation for configuration of ejb-jar.xml
## Aliases can be used to route email sent to a particular email address to a
## specified process model, process, or event.  They are of the form
## conf.mailhandler.alias.<recipientName>=<routing> where <recipientName> is an
## email account and <routing> is processmodeluuid, processmodelid, process, 
## or event followed by the corresponding id
#conf.mailhandler.alias.HelpDeskRequest=processmodeluuid0004cedf-a045-8000-234b-c0a8031014c0

##########################
#### Anonymous Access ####
##########################
## DEPRECATED: Set ANONYMOUS_ACCESS=true to receive email messages in process
## start nodes. It also enables the use of the ANONYMOUS user. 
## Setting this property to true does NOT allow users to access the portal 
## anonymously. The property remains deprecated because it will be renamed in a
## future release.
#conf.suite.ANONYMOUS_ACCESS=@conf.suite.ANONYMOUS_ACCESS@

########################
#### Single Sign-On ####
########################
## Refer to the documentation on configuring single sign-on through the Spring
## Security framework.

######################
#### Data Capping ####
######################

## Data Capping properties, value in characters; DATA_CAP_ARRAY in indices.
## The is no maximum value limit for any of these properties. Value must be > 0.
#conf.suite.DATA_CAP_WORDS=@conf.suite.DATA_CAP_WORDS@
#conf.suite.DATA_CAP_SENTENCES=@conf.suite.DATA_CAP_SENTENCES@
#conf.suite.DATA_CAP_PARAGRAPHS=@conf.suite.DATA_CAP_PARAGRAPHS@
#conf.suite.DATA_CAP_ARRAY=@conf.suite.DATA_CAP_ARRAY@
#conf.suite.DATA_CAP_FORM_LABEL=@conf.suite.DATA_CAP_FORM_LABEL@
#conf.suite.DATA_CAP_FORM_INSTRUCTIONS=@conf.suite.DATA_CAP_FORM_INSTRUCTIONS@

## Data Output Truncation Constants define data truncation limits in  
## places where data output is capped (like in report cells).
#conf.suite.DATA_TRUNC_SENTENCES=@conf.suite.DATA_TRUNC_SENTENCES@

## Notification data caps
#conf.suite.ALERT_SUBJECT_LIMIT=@conf.suite.ALERT_SUBJECT_LIMIT@
#conf.suite.ALERT_MESSAGE_LIMIT=@conf.suite.ALERT_MESSAGE_LIMIT@

###########################
#### Process Execution ####
###########################

## Activity Chaining
## User Interface request timeout in seconds for activity chains.  After the
## specified number of seconds of waiting for the next task in the chain to
## load, the user will be redirected to the Task list.
#conf.suite.REQUEST_TIMEOUT_IN_SEC=@conf.suite.REQUEST_TIMEOUT_IN_SEC@

## The limit to the number of rows returned in the Database Access node
resources.appian.process.application.arv.limit=@resources.appian.process.application.arv.limit@

## Archiving
## These two properties control what is displayed in the interface as the
## defaults when configuring auto archiving for process models.
conf.suite.AUTO_ARCHIVE_DELAY=@conf.suite.AUTO_ARCHIVE_DELAY@
conf.suite.AUTO_DELETE_DELAY=@conf.suite.AUTO_DELETE_DELAY@
## The default amount of time before a completed/canceled process will auto
## archived if not configured otherwise
server.conf.exec.AUTOARCHIVE_DELAY=@server.conf.exec.AUTOARCHIVE_DELAY@
## Whether or not automatic archiving of completed and canceled processes is 
## enabled.  1=enabled; 0=disabled
server.conf.exec.AUTOARCHIVE=@server.conf.exec.AUTOARCHIVE@

## Node Limits
## The number of nodes that will be batched for simultaneous execution when a
## node is configured for parallel multiple node execution (on the Other tab).  
## Nodes will be started in batches of this amount or fewer until the configured
## amount have been started or until MAX_NODE_INSTANCES has been reached.
server.conf.processcommon.MAX_SPAWN_INSTANCES=@server.conf.processcommon.MAX_SPAWN_INSTANCES@
## The total number of instances of a single node that can be started in a
## process instance.  To specify no limit (infinite), set to 2147483647.
server.conf.processcommon.MAX_NODE_INSTANCES=@server.conf.processcommon.MAX_NODE_INSTANCES@

## Raise the Cap on Maximum Engine Size on 64-Bit Operating Systems
## https://forum.appian.com/suite/wiki/71/Post-Install_Configurations
## https://forum.appian.com/suite/wiki/71/Configuring_the_Process_Engine_Servers#MAX_EXEC_ENGINE_LOAD_METRIC
server.conf.processcommon.MAX_EXEC_ENGINE_LOAD_METRIC=@server.conf.processcommon.MAX_EXEC_ENGINE_LOAD_METRIC@

## Process History
## The maximum number of array items stored in the process history for each 
## modified process variable that is a multiple or contains fields that are 
## multiples.  
## Set to 0 to store unlimited array items.
#server.conf.exec.PROCESS_HISTORY_MAX_ARRAY=100

##################
#### Analytics ###
##################
## Maximum number of rows that will be included when a report is exported or 
## printed.
#resources.appian.analytics.application.maxexportrows=@resources.appian.analytics.application.maxexportrows@

## Analytics Report Rows Cap 
## This number specifies the maximum number of items that can be loaded into 
## app server memory when processing a report. 
## It determines the last page that can be retrieved for a report: 
## last page = floor(maxreportrows/(number of analytics engines * number of rows per page))
## In addition, this also determines the maximum number of rows that will be 
## included when a report is exported or printed.
#resources.appian.analytics.application.maxreportrows=30000

## Analytics Engine Timeout
## How much time each analytics engine is allowed to take to process a request in 
## milliseconds. The report will time out if the request takes longer to process.
#server.conf.processcommon.MAXIMUM_REPORT_MS=2000

## Analytics Sub-Process Depth
## When a report is configured to include data from sub-processes, analytics 
## will only look at this number of sub-process levels deep.
#resources.appian.analytics.application.MAX_SUB_DEPTH=10

## Process Search: report used to display results of process searches
## the value must be an alias defined in analytics-config(-*).xml
#resources.appian.process.application.appian.process.process_search_report=all_processes
#resources.appian.process.application.appian.process.process_model_search_report=most_active_process_models

###################
#### Documents ####
###################
## The minimum allowed size for a document or a folder.
#resources.appian.ac.collaboration.MINIMUM_DOCUMENT_NAME_LENGTH=4
## The maximum allowed size in bytes for a document
#resources.appian.ac.collaboration.MAX_UPLOAD_FILE_SIZE=1024000000
## The group id of Collaboration Administrators
#resources.appian.ac.collaboration.COLLABORATION_ADMINISTRATION_GROUP_ID=0
## The number of Documents, Knowledge Center, or Folders that can be moved 
## simultaneously
#resources.appian.ac.collaboration.MAX_NUMBER_MOVEABLE_OBJECTS=4
## The number of megabytes to allocate to new users' quota for documents
## uploaded to folders in Personal and Teams knowledge centers.  Changing the
## value does not affect existing users.
#server.conf.collaboration.DEFAULTSPACE=@server.conf.collboration.DEFAULTSPACE@
## Whether documents can be downloaded with the Content-Disposition header set
## to "inline" by using inline=true as a request parameter. This property must
## be set to true in order to use PDF forms as task forms or to display the
## contents of a file stored in Documents inline on a page in the web page 
## channel.
#conf.content.download.inline=false

######################
#### Data Sources ####
######################
## The primary data source is used to store the data type metadata.  It must be 
## configured to take advantage of the new data features released in Appian 6.1.
## Set the value to the JNDI name of the datasource that will be used as the 
## primary datasource.  Note: this datasource should point to a separate 
## tablespace than any listed in the conf.data.datasources configuration.
conf.data.primary.datasource=@conf.data.primary.datasource@
## Comma-separated list of JNDI names of datasources on the application server
## that will be used to store business data.  This list is used by the Query
## Database smart service and Data Stores.
conf.data.datasources=@conf.data.datasources@
## The maximum length for SQL names (tables, columns, sequences, etc.) supported
## by the RDBMS in which the data source resides. The value is used when names
## defined by JPA annotations and/or XSD name attributes are used to map to
## tables, columns, etc. via data store entities. This is a global setting
## applied to all data sources. Set the value to the lowest common denominator
## when integrating with several RDBMS platforms. The default is set to Oracle's
## limit. Note: The effective max length is 3 characters less than the given 
## value as 3 characters are reserved for system use.
#conf.data.sql.name.maxlength=30

#####################
#### Query Rules ####
#####################
## The amount of memory in bytes that will be consumed in the application server 
## for a single query before the query is halted. Default is 1 MB.
#conf.data.query.memory.limit=1048576
## The amount of time in seconds that a query will wait for a response from the
## database before timing out.
#conf.data.query.timeout=10


#############################
#### Identity Management ####
#############################
## The maximum length of a user's last name
#resources.appian.ag.constants.ag.ln.maxsize=@resources.appian.ag.constants.ag.ln.maxsize@
## The maximum length of a user's middle name
#resources.appian.ag.constants.ag.mn.maxsize=@resources.appian.ag.constants.ag.mn.maxsize@
## The maximum length of a user's first name
#resources.appian.ag.constants.ag.fn.maxsize=@resources.appian.ag.constants.ag.fn.maxsize@

## User Visibilty
## The default behavior when the Viewers role in a user's role map is empty. 
## Valid values: viewer-details; none.
## When set to 'viewer-details', all users will be able to see the profile  
## details of a user if that user's role map has no Viewers configured.
## If set to 'none', no users will see that user's details unless they are
## explicitly added in the Viewers role of that user. Regardless of the value
## given for this property, if the Viewers role is non-empty, only those users
## set in the Viewers role will be able to see that user's profile details.
#conf.security.user.DEFAULT_VISIBILITY=viewer-details
## User identification in Tempo notifications
## The default user identification used in Tempo notifications.
## Valid values: true; false.
## When set to 'true' (the default value), user's display name (first name last
## name) will be used.
## When set to 'false', user's username will be used.
## This should be used in tandem with conf.security.user.DEFAULT_VISIBILITY
## such that when users are set to be not visible to other users
## (i.e. conf.security.user.DEFAULT_VISIBILITY=none), usernames are used in
## Tempo notifications (i.e. conf.security.user.TEMPO_NOTIF_DISPLAYNAMES=false)
## so as not to expose display names undesirably.
#conf.security.user.TEMPO_NOTIF_DISPLAYNAMES=true

#############
#### JMS ####
#############
## A list of client ids to use when connecting to the JMS provider, either
## clientIds needs to be defined as a comma-separated list or both 
## clientIdPrefix and maxConnections must be defined
#conf.jms.clientIds=
#conf.jms.clientIdPrefix=CLIENT_
#conf.jms.maxConnections=20
## The name of the JMS topic or queue that contains messages destined for 
## process
#conf.jms.processTopic=Process
## Some JMS providers have a prefix before the topic of queue name, if needed
## define that prefix here
#conf.jms.topicPrefix=
#conf.jms.queuePrefix=
## If the JMS provider requires a username and password for connection, define
## the username here and the password in passwords.properties
#conf.jms.createConnectionUsername=

################
#### Search ####
################
## Maximum number of terms that will be indexed in a field for search
## If out of memory errors occur during search indexing, reduce this number
#conf.search.lucene.maxFieldLength=2147483647
## Maximum number of docs allowed in a merge segment during indexing
#conf.search.lucene.maxMergeDocs=2147483647
## Number of merge segments to use when creating the Lucene index
## Increasing the value speeds up indexing, but uses more memory.
#conf.search.lucene.mergeFactor=25
## Determine whether search results contain items for non-searchable containers
## if the user has access.  A value of true indicates that a user with access to
## a Knowledge Center or Folder will see its contents in search results 
## regardless of whether the container is set as searchable.
#conf.search.lucene.permission.ignoreSearchFlag=false
## The directory where the global search index generation is created.  Use a 
## forward slash (/) on all platforms.
#server.conf.search.SEARCH_INDEX_DIR=<install_dir>/_admin/search/data
## The number of rows to write to the global search index file at one time.  
## Decrease this value to improve memory performance at the expense of CPU 
## performance.  If the program receives memory full (wsfull) errors during 
## search index generation, decrease this value.
#server.conf.search.SEARCH_INDEX_SPLIT=5000
## The directory where the local search index for data from the primary
## data source is stored.  This directory must not be shared between
## multiple application servers.  Use a forward slash (/) on all platforms.
#conf.data.primary.datasource.search.index=<install_dir>/_admin/search-local/index-primary

##########################################################
#### Web Services: Exposing Processes as Web Services ####
##########################################################
## See uddi-config.xml.example for how to configure UDDI registries
## By default process models exposed as a web service can be found at
## SCHEME://SERVER_AND_PORT/APPLICATION_CONTEXT/webservice/processmodel/*?WSDL
## If you want a different base URL (part before /webservice..) define that here
## An application server or web server connected to the system must be listening 
#resources.appian.webservices.application.webservice.baseurl=@resources.appian.webservices.application.webservice.baseurl@

###########################
#### Web Services Node ####
###########################
## The following are properties that control the behavior of HTTP connections
## made by the Call Web Service Node during service invocation.
## Maximum number of simultaneous connections from all web service nodes 
## on the same app server.
#conf.node.webservice.max.total.connections=@conf.node.webservice.max.total.connections@
## Maximum number of simultaneous connections from all web service nodes on 
## the same app server to a single web service host
#conf.node.webservice.max.host.connections=@conf.node.webservice.max.host.connections@
## Number of seconds to wait to establish a connection with a web service host
#conf.node.webservice.connection.timeout=@conf.node.webservice.connection.timeout@
## Once a connection is established, the number of seconds to wait for a
## response to a request
#conf.node.webservice.socket.timeout=@conf.node.webservice.socket.timeout@
## Number of redirect responses (HTTP 304) the web service node will accept
#conf.node.webservice.max.redirects=@conf.node.webservice.max.redirects@


######################################
#### PCI DSS: Password Management ####
######################################
## Password complexity requirement for user passwords. See the PCI DSS document 
## for recommended values. Unicode characters are allowed in passwords, but only
## ASCII characters are validated. The characters defined by \p{Punct} in the 
## java.util.regex.Pattern 
## (http://java.sun.com/j2se/1.5.0/docs/api/java/util/regex/Pattern.html) list 
## will be validated as "special".
#conf.security.pw.MIN_PASSWORD_LENGTH=@conf.security.pw.MIN_PASSWORD_LENGTH@
#conf.security.pw.MIN_NUMERIC_CHARACTERS=@conf.security.pw.MIN_NUMERIC_CHARACTERS@
#conf.security.pw.MIN_ALPHABETIC_CHARACTERS=@conf.security.pw.MIN_ALPHABETIC_CHARACTERS@
#conf.security.pw.MIN_SPECIAL_CHARACTERS=@conf.security.pw.MIN_SPECIAL_CHARACTERS@
## The number of past passwords to check for uniqueness, including the current.
## The range allowed is 0 through 24.
## password. Zero means no past passwords will be checked.
#conf.security.pw.NUMBER_PAST_PASSWORDS_TO_CHECK=@conf.security.pw.NUMBER_PAST_PASSWORDS_TO_CHECK@

## Expiration of user passwords after the last time that the password was 
## changed. Customers upgrading from pre-6.0.2 will have passwords expire x days
## after the upgrade if users have not changed their passwords since then. A 
## user with an expired password must update their password upon login before 
## being allowed to use Appian.
## Zero means never expire user passwords. Unit: days.
#conf.security.pw.MAX_PASSWORD_AGE=@conf.security.pw.MAX_PASSWORD_AGE@
## How long prior to the password expiration datetime to warn the user. Users
## have the option to change their password during this warning period, or 
## choose to change their password later. This value must be less than 
## MAX_PASSWORD_AGE. Zero means never warn users of upcoming password 
## expiration. Unit: days.
#conf.security.pw.WARN_PASSWORD_PERIOD=@conf.security.pw.WARN_PASSWORD_PERIOD@
## Passwords that are auto-generated by the system are considered temporary. 
## Temporary passwords may be assigned upon user creation or when a user's  
## password is reset. Temporary passwords have the minimum length specified by 
## MIN_PASSWORD_LENGTH, or 8, whichever is bigger, and they meet the password 
## complexity requirement. Temporary passwords have their own expiration period.
## Zero means never expire temporary passwords. Unit: minutes
#conf.security.pw.MAX_TEMPORARY_PASSWORD_AGE=@conf.security.pw.MAX_TEMPORARY_PASSWORD_AGE@

########################################
#### PCI DSS: Failed login attempts ####
########################################
## Locking a user account merely prevents the user from logging in. The user is 
## otherwise considered "active", e.g. returned in user searches/pickers. A user 
## account is locked after a number of failed attempts to login (wrong 
## password). Zero means the account will never be locked.
#conf.security.pw.NUMBER_FAILED_ATTEMPTS_BEFORE_LOCKING=@conf.security.pw.NUMBER_FAILED_ATTEMPTS_BEFORE_LOCKING@
## After a user account is locked, this property specifies how long to wait 
## before unlocking the account automatically. An administrator may unlock the 
## account at any time.
## Zero means never unlock the account automatically. Unit: minutes
#conf.security.pw.LOCKOUT_DURATION=@conf.security.pw.LOCKOUT_DURATION@
## The counter that keeps track of the number of failed login attempts will be 
## reset to 0 (zero) after the specified amount of time.
## This value must be greater than zero. Unit: minutes
#conf.security.pw.RESET_FAILED_LOGIN_ATTEMPTS_COUNT_AFTER=@conf.security.pw.RESET_FAILED_LOGIN_ATTEMPTS_COUNT_AFTER@

######################################################
#### PCI DSS: Disable inactive/idle user accounts ####
######################################################
## Inactivity is based on the last time that a user has successfully logged into
## the system, or when the user account was created if the user has never logged 
## in. User accounts that are inactive for a certain amount of time will be 
## automatically deactivated. System administrators may later re-activate these 
## users.
## When the property is changed from 0 (disabled) to x (enabled), deactivation  
## of users who haven't logged in since the functionality was enabled happens on
## day x. When the property is changed from x to y, where x>0, deactivation of  
## inactive users happens on day y, or immediately if more than y days have 
## passed since the functionality was enabled.
## Zero means idle accounts never get deactivated. Units: days
#conf.security.account.DEACTIVATE_AFTER_INACTIVITY=@conf.security.account.DEACTIVATE_AFTER_INACTIVITY@

#################################################
#### Email Templates for Temporary Passwords ####
#################################################
## Email templates are used to send a user's temporary password when resetting a 
## user's password, and when a password is automatically generated during 
## user account creation.
## Any custom JSPs provided here will be used instead of the out-of-the-box  
## email templates. The custom JSPs must have a corresponding  
## internationalization resource bundle. For example, the resource bundle for  
## the out-of-the-box resetPassword_emailHtml.jsp is located at 
## /ear/suite.ear/text/jsp/ntf/emailHtml/resetPassword_emailHtml_en_US.properties
## The resource bundle must have a "Subject" key listing the text to be used as  
## the subject of the email.
#conf.security.pw.RESET_PASSWORD_JSP=@conf.security.pw.RESET_PASSWORD_JSP@
#conf.security.pw.CREATE_USER_PASSWORD_JSP=@conf.security.pw.CREATE_USER_PASSWORD_JSP@

##################
#### Plug-ins ####
##################
## The plug-in loading poll interval is the maximum number of seconds that will
## pass before loading a new plug-in after it is placed in the plugins 
## directory.  Setting the interval to 0 will cause hot deployment to be
## disabled and deploying a new plug-in will require an app server restart.
#conf.plugins.poll-interval=60

###############
#### Retry ####
###############
## Some smart services and expression functions that can be safely retried when 
## they encounter certain transient errors. This setting determines length of
## time (seconds) from the initial failure that the action will be retried 
## before failing permanently.  The exponential backoff retry frequency is not 
## configurable.  Set this configuration to 0 to disable automatic retries.
#conf.retry.MAX_TIME_TO_LIVE=64800

##################################
#### Secure Credentails Store ####
##################################
## The Secure Credentials Store is used to persist encrypted credentials that
## are used to access external systems.
## External systems are identified using a string key like 
## "customer.relationship.management".  Multiple external systems are defined
## as a comma-separated list.  Any key defined here will be cause an external
## system with that key to be created on the next application server restart
## if that external system does not already exist.  Any existing external system
## that does not also have a key here will be deleted on the next application
## server restart.
#conf.scs.EXTERNAL_SYSTEMS=<comma-separated list of external system keys>

## Plug-ins are only allowed to access the Secure Credentials Store for the 
## external systems to which they are registered.  Register a plug-in using
## the following property.  An instance of this property must exist for each
## unique external system/plug-in combination.
# conf.scs.EXTERNAL_SYSTEMS_ACCESS_LIST.<external system key>=<plug-in key>
